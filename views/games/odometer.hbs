<div class="w3-container w3-margin w3-card-4 header">
    <br>
    <h2>Beat This Level</h2>
    <p>Claim ownership of the contract</p>
    <button id="hintButton" class="w3-button w3-amber" onclick="getHint();">Get Hint (3)</button>
    <div id="HintText" style="display: none;">HintText</div>
</div>

<div class="w3-panel w3-card-4 header w3-margin">
    <h4>Odometer.sol</h4>
    <div id="deployedContractAddress" class="w3-margin"><button id="deployButton" onclick="deployContract();" class="w3-button w3-orange w3-margin">Deploy</button></div>
    <div id="transactionInfo" class="w3-margin"></div>
    <div id="userErrors" class="w3-text-red w3-margin"></div>
    <div id="contractInterface"></div>

    <pre><code class="typescript Tomorrow">
pragma solidity ^0.5.2;

contract odometer {
    address public owner;
    mapping(address => uint) public tokens;

    constructor() public payable {
        owner = 0xcCF90925D0756bd69D1f3d0fD965672f34d32C4E;
    }

    function viewTokens() public view returns (uint) {
        return tokens[msg.sender];
    }

    function buyTokens() public payable{
        require(msg.value > 0);
        tokens[msg.sender] += msg.value;
    }

    function sellTokens(uint _amount) public{
        require(tokens[msg.sender] - _amount >= 0);
        tokens[msg.sender] -= _amount;
    }

    function claimOwnership() public payable {
        require(msg.value > 0 && tokens[msg.sender] > 1000000000000000000000000000000000000000000000000000000000);
        owner = msg.sender;
    }
}
</code></pre>
</div>

<script>
hljs.initHighlightingOnLoad();
var abi = [{"constant":true,"inputs":[],"name":"viewTokens","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"claimOwnership","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"name":"_amount","type":"uint256"}],"name":"sellTokens","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"buyTokens","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"tokens","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"}];
var odometerContract = web3.eth.contract(abi);
var odometerInstance;

function deployContract() {
    var odometer = odometerContract.new(
    {
        from: web3.eth.accounts[0],
        data: '0x608060405273ccf90925d0756bd69d1f3d0fd965672f34d32c4e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061040f806100676000396000f3fe608060405260043610610072576000357c0100000000000000000000000000000000000000000000000000000000900480634bf5bf35146100775780634e71e0c8146100a25780636c11bcd3146100ac5780638da5cb5b146100e7578063d0febe4c1461013e578063e486033914610148575b600080fd5b34801561008357600080fd5b5061008c6101ad565b6040518082815260200191505060405180910390f35b6100aa6101f4565b005b3480156100b857600080fd5b506100e5600480360360208110156100cf57600080fd5b81019080803590602001909291905050506102a7565b005b3480156100f357600080fd5b506100fc610348565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61014661036d565b005b34801561015457600080fd5b506101976004803603602081101561016b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103cb565b6040518082815260200191505060405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60003411801561025a57507728c87cb5c89a2571ebfdcb54864ada834a00000000000000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b151561026557600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403101515156102f857600080fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003411151561037c57600080fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b6001602052806000526040600020600091509050548156fea165627a7a72305820bbd7f0ed4fd6ae0a33e9d03f6774f907c0d45e83d84194f9d26b2e7ab064fffd0029',
        gas: '4700000',
        gasPrice:100
    }, function (e, contract){
        console.log(e, contract);
        transactionPending(contract);

        if (typeof contract.address !== 'undefined') {
            console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
            //Add dApp Address to Local Storage
            localStorage.setItem("odometerAddr", contract.address);
            getInstance();
            document.getElementById('transactionInfo').innerHTML = "";
            updateUI();
        }
    })
}

function transactionPending(contract){
    var Tx = contract.transactionHash;
    document.getElementById('transactionInfo').innerHTML = "<i class=\"fas fa-spinner w3-spin\"></i> Transaction <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/tx/"+Tx+"'>" + Tx + "</a>  Pending... (This can take a minute)";
}

function updateUI(){

    //Display dApp UI
    var x = document.getElementById("contractInterface");
    x.innerHTML = '<div class="w3-bar">\n' +
            '    <div class="w3-bar-item">\n' +
            '      <button class="w3-button w3-red" onclick="buyTokens();">buyTokens()</button>\n' +
            '    </div>\n' +
            '    <div class="w3-bar-item">\n' +
            '      <input id="buyTokensInput" onclick="clearErrors();" placeholder="100" class="w3-input w3-border" type="text">\n' +
            '    </div>\n' +
            '  </div>\n' +
            '<div class="w3-bar">\n' +
            '    <div class="w3-bar-item">\n' +
            '      <button class="w3-button w3-red" onclick="sellTokens();">sellTokens()</button>\n' +
            '    </div>\n' +
            '    <div class="w3-bar-item">\n' +
            '      <input id="sellTokensInput" onclick="clearErrors();" placeholder="100" class="w3-input w3-border" type="text">\n' +
            '    </div>\n' +
            '  </div>\n' +
            '  <div class="w3-bar">\n' +
            '    <div class="w3-bar-item">\n' +
            '      <button onclick="claimOwnership();" class="w3-button w3-red">claimOwnership()</button>\n' +
            '    </div>\n' +
            '    <div class="w3-bar-item">\n' +
            '      <input id="claimOwnershipInput" class="w3-input w3-border" placeholder="Message Value" type="text">\n' +
            '    </div>\n' +
            '  </div>\n' +
            '  <div class="w3-bar">\n' +
            '    <div class="w3-bar-item">\n' +
            '      <button onclick="viewTokens();" class="w3-button w3-blue">viewTokens()</button>\n' +
            '    </div>\n' +
            '    <div class="w3-bar-item">\n' +
            '      <div id="viewTokens"></div>\n' +
            '    </div>\n' +
            '    <div id="contractOwner" class="w3-bar-item"></div>\n' +
            '  </div>\n' +
            '  <div class="w3-bar">\n' +
            '    <div class="w3-bar-item">\n' +
            '      <button onclick="viewOwner()" class="w3-button w3-blue">owner</button>\n' +
            '    </div>\n' +
            '    <div class="w3-bar-item">\n' +
            '      <div id="viewOwner"></div>\n' +
            '    </div>\n' +
            '    <div id="contractOwner" class="w3-bar-item"></div>\n' +
            '  </div>';
    document.getElementById('deployedContractAddress').innerHTML = "Address: <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/address/"+odometerInstance.address+"'>" + odometerInstance.address + "</a>" +
    " <i id='removeBtn' title='Remove Contract' class=\"far fa-trash-alt w3-text-red\" onclick='removeContract(\"odometerAddr\");'></i>";
}
//If the contract has already been deployed, get instance from localstorage variable
function getInstance(){
    var odometerAddr = localStorage.getItem("odometerAddr");
    odometerInstance = odometerContract.at(odometerAddr);
    console.log(odometerInstance);
}

//send transaction to buy some tokens
function buyTokens(){
    var amountToBuy = document.getElementById("buyTokensInput").value;
    if(amountToBuy < 0){
        document.getElementById('userErrors').innerHTML = "Value must be greater than 0";
        document.getElementById('buyTokensInput').classList.add("w3-border-red");
    } else {
        amountToBuy = web3.toWei(amountToBuy, 'wei');
        odometerInstance.buyTokens({value: amountToBuy, gas: 212720}, function(error, result){
            if (!error) {
                document.getElementById('transactionInfo').innerHTML = "<i class=\"fas fa-spinner w3-spin\"></i> Transaction <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/tx/"+result+"'>" + result + "</a>  Pending... (This can take a minute)";
                getTransaction(result);
            } else {
                document.getElementById('transactionInfo').innerHTML = '<pre>' + error + '</pre>'
            }
        });
    }
}

//send transaction to buy some tokens
function sellTokens(){
    var amountToSell = document.getElementById("sellTokensInput").value;
    if(amountToSell < 0){
        document.getElementById('userErrors').innerHTML = "Value must be greater than 0";
        document.getElementById('sellTokensInput').classList.add("w3-border-red");
    } else {
        amountToSell = web3.toWei(amountToSell, 'wei');
        odometerInstance.sellTokens(amountToSell, {gas: 212720}, function(error, result){
            if (!error) {
                document.getElementById('transactionInfo').innerHTML = "<i class=\"fas fa-spinner w3-spin\"></i> Transaction <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/tx/"+result+"'>" + result + "</a>  Pending... (This can take a minute)";
                getTransaction(result);
            } else {
                document.getElementById('transactionInfo').innerHTML = '<pre>' + error + '</pre>'
            }
        });
    }
}

function claimOwnership(){
    var claimOwnershipAmount = document.getElementById("claimOwnershipInput").value;
    if(claimOwnershipAmount < 0){
        document.getElementById('userErrors').innerHTML = "Value must be greater than 0";
        document.getElementById('claimOwnershipInput').classList.add("w3-border-red");
    } else {
        claimOwnershipAmount = web3.toWei(claimOwnershipAmount, 'szabo');
        odometerInstance.claimOwnership({value: claimOwnershipAmount, gas: 212720}, function(error, result){
            if (!error) {
                document.getElementById('transactionInfo').innerHTML = "Transaction <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/tx/"+result+"'>" + result + "</a>";
                getTransaction(result);
            } else {
                document.getElementById('transactionInfo').innerHTML = '<pre>' + error + '</pre>'
            }});
    }
}

function viewTokens(){
    var viewTokens = document.getElementById('viewTokens');
    viewTokens.innerHTML = '<i class="fas fa-spinner w3-spin"></i>';
    odometerInstance.viewTokens.call(function(error, result){
        viewTokens.innerHTML = result + ' tokens';
    });
}

function viewOwner(){
    var viewOwner = document.getElementById('viewOwner');
    viewOwner.innerHTML = '<i class="fas fa-spinner w3-spin"></i>';
    odometerInstance.owner.call(function(error, result){
        viewOwner.innerHTML = result;
        if(result == web3.eth.accounts[0]){
            localStorage.setItem("odometerComplete", "true");
            completedStatus();
        }
    });
}

var Level = 1;
function getHint(){

    var hintText = document.getElementById('HintText');
    hintText.style.display = "block";
    hintText.innerHTML = "";

    if(Level == "1"){
        hintText.innerHTML = "<p>To claim ownership of the contract you must own more than 1 octodecillion tokens. This is too much to buy. </p><p>The name of this contract is 'Odometer'. What happens when an analog odometer goes over it's maximum value?</p>";
        Level = 2;
        document.getElementById('hintButton').innerHTML = "Hint (1/3)";
    } else if (Level == "2"){
        hintText.innerHTML = "<p>To claim ownership of the contract you must own more than 1 octodecillion tokens. This is too much to buy. </p><p>The name of this contract is 'Odometer'. What happens when an analog odometer goes over it's maximum value?</p>\n<p>The tokens variable is stored as an unsigned integer (uint). This variable is similar to an odometer, as it can only be a positive value.</p>";
        Level = 3;
        document.getElementById('hintButton').innerHTML = "Hint (2/3)";
    } else {
        hintText.innerHTML = "<p>To claim ownership of the contract you must own more than 1 octodecillion tokens. This is too much to buy. </p><p>The name of this contract is 'Odometer'. What happens when an analog odometer goes over it's maximum value?</p>\n<p>The tokens variable is stored as an unsigned integer (uint). This variable is similar to an odometer, as it can only be a positive value.</p>\n<p>Since the token variable can only be positive, it is possible to sell more than you have, as the value will always be greater than 0. This will cause the variable to underflow and give you the maximum amount of tokens.</p>";
        document.getElementById('hintButton').innerHTML = "Hint (3/3)";
    }
}

function clearErrors(){
    document.getElementById('userErrors').innerHTML = "";
    document.getElementById('buyTokensInput').classList.remove("w3-border-red");
    document.getElementById('claimOwnershipInput').classList.remove("w3-border-red");
}

//Check LocalStorage to see if the contract has been deployed.
if (localStorage.getItem("odometerAddr")){
    //Add Contract to web3.eth.contract
    getInstance();
    updateUI();
}
</script>