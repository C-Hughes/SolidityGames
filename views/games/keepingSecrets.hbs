<div id="levelCompleteModal" class="w3-modal">
    <div class="w3-modal-content w3-card-4 w3-animate-zoom">
        <header class="w3-container w3-indigo">
        <span onclick="document.getElementById('levelCompleteModal').style.display='none'"
              class="w3-button w3-display-topright">&times;</span>
            <h2>Congratulations!</h2>
        </header>
        <div class="w3-container header">
            <p>You completed KeepingSecrets!</p>
            <p>You are now ready to move onto the next level</p>
        </div>
        <footer class="w3-container w3-padding w3-indigo">
            <a href="/survey" class="w3-button w3-left w3-amber">I've Had Enough</a><a href="/games/externalFactors" class="w3-button w3-right w3-green">Next Level</a>
        </footer>
    </div>
</div>

<div class="w3-container w3-margin w3-card-4 header">
    <div class="w3-cell-row">
        <div class="w3-cell w3-cell-bottom">
            <h2>KeepingSecrets</h2>
        </div>
        <div class="w3-cell w3-cell-middle" style="text-align: right">
            Difficulty: <span class="w3-tag w3-lime">3/10</span>
        </div>
    </div>

    <hr>

    <h3>Beat This Level</h3>
    <p>To beat this level, find the secret and claim ownership of the contract</p>

    <button id="hintButton" class="w3-button w3-amber w3-margin" onclick="getHint();">Get Hint (3)</button>
    <div id="HintText" style="display: none;"></div>
</div>

<div class="w3-panel w3-card-4 header w3-margin">
    <h4>keepingSecrets.sol</h4>
    <div id="deployedContractAddress" class="w3-margin"><button id="deployButton" onclick="deployContract();" class="w3-button w3-orange w3-margin">Deploy</button></div>
    <div id="transactionInfo" class="w3-margin secondary"></div>
    <div id="userErrors" class="w3-text-red w3-margin"></div>
    <div id="contractInterface" style="display: none;">
        <div class="w3-bar">
            <div class="w3-bar-item">
                <button onclick="viewOwner()" class="w3-button w3-blue">owner</button>
            </div>
            <div class="w3-bar-item">
                <div id="viewOwner"></div>
            </div>
        </div>
        <div class="w3-bar">
            <div class="w3-bar-item">
                <button onclick="claimOwnership();" class="w3-button w3-red">claimOwnership()</button>
            </div>
            <div class="w3-bar-item">
                <input id="claimOwnershipInput" class="w3-input w3-border" placeholder="Enter Secret" type="text">
            </div>
        </div>
    </div>

    <pre><code class="Javascript Tomorrow">
pragma solidity ^0.5.3;

contract keepingSecrets {
    address public owner;
    bytes32 private secret;

    constructor(bytes32 _secret) public {
        owner = 0xcCF90925D0756bd69D1f3d0fD965672f34d32C4E;
        secret = _secret;
    }

    function claimOwnership(bytes32 _secret) public {
        if (secret == _secret) {
            owner = msg.sender;
        }
    }
}
</code></pre>
</div>
<script>
hljs.initHighlightingOnLoad();

var abi = [{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_secret","type":"bytes32"}],"name":"claimOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_secret","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}];
var keepingSecretsContract = web3.eth.contract(abi);
var keepingSecretsInstance;

function deployContract() {
    var keepingsecrets = keepingSecretsContract.new(
        "0x546869734973546865536563726574",
        {
            from: web3.eth.accounts[0],
            data: '0x608060405234801561001057600080fd5b5060405160208061021b8339810180604052602081101561003057600080fd5b810190808051906020019092919050505073ccf90925d0756bd69d1f3d0fd965672f34d32c4e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001819055505061016f806100ac6000396000f3fe608060405234801561001057600080fd5b5060043610610053576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b14610058578063b367c657146100a2575b600080fd5b6100606100d0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100ce600480360360208110156100b857600080fd5b81019080803590602001909291905050506100f5565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600154141561014057336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5056fea165627a7a72305820cdaaaad9e4c54d23bc1788290c58d64269e3fcce02cc0f02fa7a40a907a1c6cf0029',
            gas: '4700000',
            gasPrice: 21000000000
        }, function (e, contract) {
        console.log(e, contract);
                document.getElementById('transactionInfo').innerHTML = "<i class=\"fas fa-spinner w3-spin\"></i> <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://"+networkURL+".etherscan.io/tx/"+contract.transactionHash+"'>" + contract.transactionHash + "</a>  Pending... (This can take a minute)";
        if (typeof contract.address !== 'undefined') {
            console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
            //Add dApp Address to Local Storage
            localStorage.setItem("keepingSecretsAddr", contract.address);
            getInstance();
            document.getElementById('transactionInfo').innerHTML = "";
            updateUI();
        }
    })
}

function updateUI(){
    refreshInfo();
    //Display dApp UI
    document.getElementById("contractInterface").style.display="block";
    document.getElementById('deployedContractAddress').innerHTML = "Address: <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://"+networkURL+".etherscan.io/address/"+keepingSecretsInstance.address+"'>" + keepingSecretsInstance.address + "</a>" +
    " <i id='removeBtn' title='Remove Contract' class=\"far fa-trash-alt w3-text-red\" onclick='removeContract(\"keepingSecretsAddr\");'></i>";
}
//If the contract has already been deployed, get instance from localstorage variable
function getInstance(){
    var keepingSecretsAddr = localStorage.getItem("keepingSecretsAddr");
    keepingSecretsInstance = keepingSecretsContract.at(keepingSecretsAddr);
    console.log(keepingSecretsInstance);
}

function viewOwner(){
    var viewOwner = document.getElementById('viewOwner');
    viewOwner.innerHTML = '<i class="fas fa-spinner w3-spin"></i>';
    keepingSecretsInstance.owner.call(function(error, result){
        viewOwner.innerHTML = result;
        if(result == web3.eth.accounts[0]){
            localStorage.setItem("keepingSecretsComplete", "true");
            completedStatus();
            document.getElementById('levelCompleteModal').style.display='block';
            clearInterval(updateInfo);
        }
    });
}

function claimOwnership(){
    var claimOwnershipSecret = document.getElementById("claimOwnershipInput").value;
    keepingSecretsInstance.claimOwnership(claimOwnershipSecret, {gas: 212720}, function(error, result){
        if (!error) {
            document.getElementById('transactionInfo').innerHTML += "<div id="+result+"><i class=\"fas fa-spinner w3-spin\"></i> <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://"+networkURL+".etherscan.io/tx/"+result+"'>" + result + "</a> Pending... (This can take a minute)</div>";
            getTransaction(result);
        } else {
            document.getElementById('transactionInfo').innerHTML += '<pre>' + error + '</pre>'
        }});

}

var Level = 1;
function getHint(){

    var hintText = document.getElementById('HintText');
    hintText.style.display = "block";
    hintText.innerHTML = "";

    if(Level == "1"){
        hintText.innerHTML = "<p>The blockchain is public and easily viewable. This allows anyone to view the transactions, account balances and contract variable values - including ones set as private.</p>";
        Level = 2;
        document.getElementById('hintButton').innerHTML = "Hint (1/3)";
    } else if (Level == "2"){
        hintText.innerHTML = "<p>The blockchain is public and easily viewable. This allows anyone to view the transactions, account balances and contract variable values - including ones set as private.</p><p>Try using a block explorer, such as <a href='https://ropsten.etherscan.io/'>https://ropsten.etherscan.io/</a> to view the initialisation transaction for the deployed smart contract. Look carefully at the input data.</p>";
        Level = 3;
        document.getElementById('hintButton').innerHTML = "Hint (2/3)";
    } else {
        hintText.innerHTML = "<p>The blockchain is public and easily viewable. This allows anyone to view the transactions, account balances and contract variable values - including ones set as private.</p><p>Try using a block explorer, such as <a href='https://ropsten.etherscan.io/'>https://ropsten.etherscan.io/</a> to view the initialisation transaction for the deployed smart contract. Look carefully at the input data.</p><p>Make sure to set the input data view to UTF-8.  </p>";
        document.getElementById('hintButton').innerHTML = "Hint (3/3)";
    }
}

var updateInfo;
function refreshInfo(){
    //Call every 10 seconds.
    updateInfo = setInterval(function() {
        viewOwner();
    }, 10000);
}

//Check LocalStorage to see if the contract has been deployed.
if (localStorage.getItem("keepingSecretsAddr")){
    getInstance();
    updateUI();
    viewOwner();
}
</script>