<div class="w3-container w3-margin w3-card-4 header">
    <br>
    <h2>Beat This Level</h2>
    <p>Find the secret to claim ownership of the contract</p>
    <button id="hintButton" class="w3-button w3-amber" onclick="getHint();">Get Hint (3)</button>
    <div id="HintText" style="display: none;"></div>
</div>

<div class="w3-panel w3-card-4 header w3-margin">
    <h4>simpleDAO.sol</h4>
    <div id="deployedContractAddress" class="w3-margin"><button id="deployButton" onclick="deployContract();" class="w3-button w3-orange w3-margin">Deploy</button></div>
    <div id="transactionInfo" class="w3-margin"></div>
    <div id="userErrors" class="w3-text-red w3-margin"></div>
    <div id="contractInterface"></div>

    <pre><code class="Javascript Tomorrow">
pragma solidity ^0.5.4;

contract SimpleDAO {
    mapping (address => uint) public credit;

    constructor() public payable {}

    function viewCredit(address _address) public view returns (uint) {
        return credit[_address];
    }

    function buyCredit() public payable {
        credit[msg.sender] += msg.value;
    }

    function donate(address _to) public {
        credit[_to] += credit[msg.sender];
        credit[msg.sender] -= credit[msg.sender];
    }

    function withdraw(uint _amount) public {
        if (credit[msg.sender]>= _amount){
            msg.sender.call.value(_amount)("");
            credit[msg.sender]-=_amount;
        }
    }

    function() external payable {}
}
</code></pre>
</div>
<script>
hljs.initHighlightingOnLoad();

var abi = [{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"donate","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_address","type":"address"}],"name":"viewCredit","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"buyCredit","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"credit","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"}];
var simpleDAOContract = web3.eth.contract(abi);
var simpleDAOInstance;

function deployContract() {
    var simpleDAO = simpleDAOContract.new(
            {
                from: web3.eth.accounts[0],
                data: '0x60806040526104b6806100136000396000f3fe608060405260043610610066576000357c010000000000000000000000000000000000000000000000000000000090048062362a951461006857806320ef3042146100b95780632e1a7d4d1461011e5780638e4e6f0614610159578063d5d44d8014610163575b005b34801561007457600080fd5b506100b76004803603602081101561008b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101c8565b005b3480156100c557600080fd5b50610108600480360360208110156100dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102df565b6040518082815260200191505060405180910390f35b34801561012a57600080fd5b506101576004803603602081101561014157600080fd5b8101908080359060200190929190505050610327565b005b610161610424565b005b34801561016f57600080fd5b506101b26004803603602081101561018657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610472565b6040518082815260200191505060405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610421573373ffffffffffffffffffffffffffffffffffffffff168160405180600001905060006040518083038185875af1925050503d80600081146103cc576040519150601f19603f3d011682016040523d82523d6000602084013e6103d1565b606091505b505050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b50565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b6000602052806000526040600020600091509050548156fea165627a7a723058205f526ac942e04d60ba5f223fe9636c622c94b44c0435a786b5b2f8269541f5cc0029',
                gas: '4700000',
                value: 100000000000000000
            }, function (e, contract) {
                console.log(e, contract);
                transactionPending(contract);
                if (typeof contract.address !== 'undefined') {
                    console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
                    //Add dApp Address to Local Storage
                    localStorage.setItem("simpleDAOAddr", contract.address);
                    getInstance();
                    document.getElementById('transactionInfo').innerHTML = "";
                    updateUI();
                }
            })
}

function transactionPending(contract){
    var Tx = contract.transactionHash;
    document.getElementById('transactionInfo').innerHTML = "<i class=\"fas fa-spinner w3-spin\"></i> Transaction <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/tx/"+Tx+"'>" + Tx + "</a>  Pending... (This can take a minute)";
}

function updateUI(){
    //Display dApp UI
    var x = document.getElementById("contractInterface");
    x.innerHTML = '<div class="w3-bar">\n' +
            '    <div class="w3-bar-item">\n' +
            '      <button onclick="checkBalance();" class="w3-button w3-blue">View Contract Balance</button>\n' +
            '    </div>\n' +
            '    <div class="w3-bar-item">\n' +
            '      <div id="checkBalance"></div>\n' +
            '    </div>\n' +
            '    <div class="w3-bar">\n' +
            '      <div class="w3-bar-item">\n' +
            '        <button onclick="checkMyCredit();" class="w3-button w3-blue">View My Credit</button>\n' +
            '      </div>\n' +
            '      <div class="w3-bar-item">\n' +
            '        <div id="viewMyCredit"></div>\n' +
            '      </div>\n' +
            '  <div class="w3-bar">\n' +
            '    <div class="w3-bar-item">\n' +
            '      <button onclick="checkCredit();" class="w3-button w3-blue">View Credit</button>\n' +
            '    </div>\n' +
            '    <div class="w3-bar-item">\n' +
            '      <input id="viewCreditInput" class="w3-input w3-border" placeholder="Address" style="width:300px" type="text">\n' +
            '    </div>\n' +
            '      <div class="w3-bar-item">\n' +
            '        <div id="viewCredit"></div>\n' +
            '      </div>\n' +
            '  </div>\n' +
            '  <div class="w3-bar">\n' +
            '    <div class="w3-bar-item">\n' +
            '      <button onclick="buyCredit();" class="w3-button w3-red">buyCredit()</button>\n' +
            '    </div>\n' +
            '    <div class="w3-bar-item">\n' +
            '      <input id="buyCreditInput" class="w3-input w3-border" placeholder="Amount to Buy (Ether)" style="width:300px" type="text">\n' +
            '    </div>\n' +
            '  </div>\n' +
            '    <div class="w3-bar">' +
            '      <div class="w3-bar-item">\n' +
            '        <button onclick="donate();" class="w3-button w3-red">donate()</button>\n' +
            '      </div>\n' +
            '    <div class="w3-bar-item">\n' +
            '      <input id="transferBalanceInput" class="w3-input w3-border" placeholder="To Address" style="width:300px" type="text">\n' +
            '    </div>\n' +
            '    <div class="w3-bar">' +
            '      <div class="w3-bar-item">\n' +
            '        <button onclick="withdraw();" class="w3-button w3-red">withdraw()</button>\n' +
            '      </div>\n' +
            '    <div class="w3-bar-item">\n' +
            '      <input id="withdrawInput" class="w3-input w3-border" placeholder="Amount to Withdraw" style="width:300px" type="text">\n' +
            '    </div>\n' +
            '  </div>';

    document.getElementById('deployedContractAddress').innerHTML = "Address: <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/address/"+simpleDAOInstance.address+"'>" + simpleDAOInstance.address + "</a>" +
    " <i id='removeBtn' title='Remove Contract' class=\"far fa-trash-alt w3-text-red\" onclick='removeContract(\"simpleDAOAddr\");'></i>";
}
//If the contract has already been deployed, get instance from localstorage variable
function getInstance(){
    var simpleDAOAddr = localStorage.getItem("simpleDAOAddr");
    simpleDAOInstance = simpleDAOContract.at(simpleDAOAddr);
    console.log(simpleDAOInstance);
}

function checkBalance(){
    var checkBalance = document.getElementById('checkBalance');
    checkBalance.innerHTML = '<i class="fas fa-spinner w3-spin"></i>';
    web3.eth.getBalance(simpleDAOInstance.address, function(error, result){
        result = result/1000000000000000000;
        checkBalance.innerHTML = result + ' Ether';
        if(result == 0){
            localStorage.setItem("simpleDAOComplete", "true");
            completedStatus();
        }
    });
}

function checkMyCredit(){
    var viewCredit = document.getElementById('viewMyCredit');
    viewCredit.innerHTML = '<i class="fas fa-spinner w3-spin"></i>';
    simpleDAOInstance.viewCredit.call(web3.eth.accounts[0], function(error, result){
        result = result/1000000000000000000;
        viewCredit.innerHTML = result + ' Ether';
    });
}

function checkCredit(){
    var viewCredit = document.getElementById('viewCredit');
    var input = document.getElementById('viewCreditInput').value;
    viewCredit.innerHTML = '<i class="fas fa-spinner w3-spin"></i>';
    simpleDAOInstance.viewCredit.call(input, function(error, result){
        result = result/1000000000000000000;
        viewCredit.innerHTML = result + ' Ether';
    });
}

function donate(){
    var address = document.getElementById("transferBalanceInput").value;
    simpleDAOInstance.donate(address, {gas: 212720}, function(error, result){
        if (!error) {
            document.getElementById('transactionInfo').innerHTML = "<i class=\"fas fa-spinner w3-spin\"></i> Transaction: <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/tx/"+result+"'>" + result + "</a>";
            getTransaction(result);
        } else {
            document.getElementById('transactionInfo').innerHTML = '<pre>' + error + '</pre>'
        }
    });
}

function withdraw(){
    var amount = document.getElementById("withdrawInput").value;
    simpleDAOInstance.withdraw(amount,{gas: 212720}, function(error, result){
        if (!error) {
            document.getElementById('transactionInfo').innerHTML = "<i class=\"fas fa-spinner w3-spin\"></i> Transaction: <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/tx/"+result+"'>" + result + "</a>";
            getTransaction(result);
        } else {
            document.getElementById('transactionInfo').innerHTML = '<pre>' + error + '</pre>'
        }
    });
}

function buyCredit(){
    var amountToAdd = document.getElementById("buyCreditInput").value;
    if(amountToAdd <= 0){
        document.getElementById('userErrors').innerHTML = "Value must be greater than 0";
        document.getElementById('buyCreditInput').classList.add("w3-border-red");
    } else {
        amountToAdd = web3.toWei(amountToAdd, 'ether');
        simpleDAOInstance.buyCredit({value: amountToAdd, gas: 212720}, function(error, result){
            if (!error) {
                document.getElementById('transactionInfo').innerHTML = "<i class=\"fas fa-spinner w3-spin\"></i> Transaction: <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/tx/"+result+"'>" + result + "</a>";
                getTransaction(result);
            } else {
                document.getElementById('transactionInfo').innerHTML = '<pre>' + error + '</pre>'
            }
        });
    }
}

var Level = 1;
function getHint(){

    var hintText = document.getElementById('HintText');
    hintText.style.display = "block";
    hintText.innerHTML = "";

    if(Level == "1"){
        hintText.innerHTML = "<p>Before Solidity v0.4.23, a function with the same name as the contract is the constructor function. This code is executed exactly once, when the contract is initially deployed. </p>";
        document.getElementById('hintButton').innerHTML = "Hint (1/2)";
        Level = 2;
    } else if (Level == "2"){
        hintText.innerHTML = "<p>Before Solidity v0.4.23, a function with the same name as the contract is the constructor function. This code is executed exactly once, when the contract is initially deployed. </p><p>In Solidity, function and variable names are case sensitive.</p>";
        document.getElementById('hintButton').innerHTML = "Hint (2/2)";
    }
}

//Check LocalStorage to see if the contract has been deployed.
if (localStorage.getItem("simpleDAOAddr")){
    //Add Contract to web3.eth.contract
    getInstance();
    updateUI();

    //checkBalance();
    //checkCredit();
}
</script>