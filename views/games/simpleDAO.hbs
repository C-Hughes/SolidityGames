<div class="w3-container w3-margin w3-card-4 header">
    <br>
    <h2>Beat This Level</h2>
    <p>Find the secret to claim ownership of the contract</p>
    <button id="hintButton" class="w3-button w3-amber" onclick="getHint();">Get Hint (3)</button>
    <div id="HintText" style="display: none;"></div>
</div>

<div class="w3-panel w3-card-4 header w3-margin">
    <h4>simpleDAO.sol</h4>
    <div id="deployedContractAddress" class="w3-margin"><button id="deployButton" onclick="deployContract();" class="w3-button w3-orange w3-margin">Deploy</button></div>
    <div id="transactionInfo" class="w3-margin"></div>
    <div id="userErrors" class="w3-text-red w3-margin"></div>
    <div id="contractInterface"></div>

    <pre><code class="Javascript Tomorrow">
pragma solidity ^0.4.0;

contract SimpleDAO {
    mapping (address => uint) public credit;

    function donate(address to){
        credit[to] += msg.value;
    }

    function queryCredit(address to) returns (uint){
        return credit[to];
    }

    function withdraw(uint amount){
        if (credit[msg.sender]>= amount){
            msg.sender.call.value(amount)();
            credit[msg.sender]-=amount;
        }
    }
}
</code></pre>
</div>
<script>
hljs.initHighlightingOnLoad();

var abi = [];
var simpleDAOContract = web3.eth.contract(abi);
var simpleDAOInstance;

function deployContract() {
    var simpleDAO = simpleDAOContract.new(
            "0x546869734973546865536563726574",
            {
                from: web3.eth.accounts[0],
                data: '0x608060405234801561001057600080fd5b5060405160208061021b8339810180604052602081101561003057600080fd5b810190808051906020019092919050505073ccf90925d0756bd69d1f3d0fd965672f34d32c4e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001819055505061016f806100ac6000396000f3fe608060405234801561001057600080fd5b5060043610610053576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b14610058578063b367c657146100a2575b600080fd5b6100606100d0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100ce600480360360208110156100b857600080fd5b81019080803590602001909291905050506100f5565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600154141561014057336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5056fea165627a7a72305820cdaaaad9e4c54d23bc1788290c58d64269e3fcce02cc0f02fa7a40a907a1c6cf0029',
                gas: '4700000'
            }, function (e, contract) {
                console.log(e, contract);
                transactionPending(contract);
                if (typeof contract.address !== 'undefined') {
                    console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
                    //Add dApp Address to Local Storage
                    localStorage.setItem("keepingSecretsAddr", contract.address);
                    getInstance();
                    document.getElementById('transactionInfo').innerHTML = "";
                    updateUI();
                }
            })
}

function transactionPending(contract){
    var Tx = contract.transactionHash;
    document.getElementById('transactionInfo').innerHTML = "<i class=\"fas fa-spinner w3-spin\"></i> Transaction <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/tx/"+Tx+"'>" + Tx + "</a>  Pending... (This can take a minute)";
}

function updateUI(){
    //Display dApp UI
    var x = document.getElementById("contractInterface");
    x.innerHTML = '  <div class="w3-bar">\n' +
            '    <div class="w3-bar-item">\n' +
            '      <button onclick="claimOwnership();" class="w3-button w3-red">claimOwnership()</button>\n' +
            '    </div>\n' +
            '    <div class="w3-bar-item">\n' +
            '      <input id="claimOwnershipInput" class="w3-input w3-border" placeholder="_secret" style="width:150px" type="text">\n' +
            '    </div>\n' +
            '  </div>\n' +
            '  <div class="w3-bar">\n' +
            '    <div class="w3-bar-item">\n' +
            '      <button onclick="viewOwner()" class="w3-button w3-blue">owner</button>\n' +
            '    </div>\n' +
            '    <div class="w3-bar-item">\n' +
            '      <div id="viewOwner"></div>\n' +
            '    </div>\n' +
            '  </div>';
    document.getElementById('deployedContractAddress').innerHTML = "Address: <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/address/"+keepingSecretsInstance.address+"'>" + keepingSecretsInstance.address + "</a>";
}
//If the contract has already been deployed, get instance from localstorage variable
function getInstance(){
    var simpleDAOAddr = localStorage.getItem("simpleDAOAddr");
    simpleDAOInstance = simpleDAOContract.at(simpleDAOAddr);
    console.log(simpleDAOInstance);
}

var Level = 1;
function getHint(){

    var hintText = document.getElementById('HintText');
    hintText.style.display = "block";
    hintText.innerHTML = "";

    if(Level == "1"){
        hintText.innerHTML = "<p>Before Solidity v0.4.23, a function with the same name as the contract is the constructor function. This code is executed exactly once, when the contract is initially deployed. </p>";
        document.getElementById('hintButton').innerHTML = "Hint (1/2)";
        Level = 2;
    } else if (Level == "2"){
        hintText.innerHTML = "<p>Before Solidity v0.4.23, a function with the same name as the contract is the constructor function. This code is executed exactly once, when the contract is initially deployed. </p><p>In Solidity, function and variable names are case sensitive.</p>";
        document.getElementById('hintButton').innerHTML = "Hint (2/2)";
    }
}

//Check LocalStorage to see if the contract has been deployed.
if (localStorage.getItem("simpleDAOAddr")){
    //Add Contract to web3.eth.contract
    getInstance();
    updateUI();
}
</script>