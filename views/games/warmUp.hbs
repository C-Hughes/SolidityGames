<div id="levelCompleteModal" class="w3-modal">
    <div class="w3-modal-content w3-card-4 w3-animate-zoom">
        <header class="w3-container w3-indigo">
        <span onclick="document.getElementById('levelCompleteModal').style.display='none'"
              class="w3-button w3-display-topright">&times;</span>
            <h2>Congratulations!</h2>
        </header>
        <div class="w3-container header">
            <p>You completed the first level!</p>
            <p>You are now ready to move onto the next level</p>
        </div>
        <footer class="w3-container w3-padding w3-indigo">
            <a href="/survey" class="w3-button w3-left w3-amber">I've Had Enough</a><a href="/games/rubixi" class="w3-button w3-right w3-green">Next Level</a>
        </footer>
    </div>
</div>

<div class="w3-container w3-margin w3-card-4 header">
    <div class="w3-cell-row">
        <div class="w3-cell w3-cell-bottom">
            <h2>WarmUp</h2>
        </div>
        <div class="w3-cell w3-cell-middle" style="text-align: right">
            Difficulty: <span class="w3-tag w3-green">1/10</span>
        </div>
    </div>

    <hr>
    <h3>Instructions</h3>
    <p>This level designed for you to get familiar with MetaMask and interacting with the Ethereum blockchain.</p>
    <p>This level does not contain any security vulnerabilities.</p>

    <ul>
        <li>Clicking blue buttons will read information from the contract</li>
        <li>Clicking red buttons will call the contract's functions</li>
        <li>You can send more than one transaction at a time</li>
    </ul>
    <hr>

    <h3>Beat This Level</h3>
    <p>To beat this level, claim ownership of the contract</p>

    <button id="hintButton" class="w3-button w3-amber w3-margin" onclick="getHint();">Get Hint (2)</button>
    <div id="HintText" style="display: none;">HintText</div>
</div>

<div class="w3-panel w3-card-4 header w3-margin">
    <h4>WarmUp.sol</h4>
    <div id="deployedContractAddress" class="w3-margin"><button id="deployButton" onclick="deployContract();" class="w3-button w3-orange w3-margin">Deploy</button></div>
    <div id="transactionInfo" class="w3-margin secondary"></div>
    <div id="userErrors" class="w3-text-red w3-margin"></div>
    <div id="contractInterface" style="display: none;">
        <div class="w3-bar">
            <div class="w3-bar-item">
                <button onclick="viewContributions();" class="w3-button w3-blue">viewContribution()</button>
            </div>
            <div class="w3-bar-item">
                <div id="viewContributions"></div>
            </div>
            <div id="contractOwner" class="w3-bar-item"></div>
        </div>
        <div class="w3-bar">
            <div class="w3-bar-item">
                <button onclick="viewOwner()" class="w3-button w3-blue">owner</button>
            </div>
            <div class="w3-bar-item">
                <div id="viewOwner"></div>
            </div>
        </div>
        <div class="w3-bar">
            <div class="w3-bar-item">
                <button class="w3-button w3-red" onclick="addToPot();">addToPot()</button>
            </div>
            <div class="w3-bar-item">
                <input id="addToPotInput" onclick="clearErrors();" placeholder="Amount to Buy" class="w3-input w3-border" type="text">
            </div>
        </div>
        <div class="w3-bar">
            <div class="w3-bar-item">
                <button onclick="claimOwnership();" class="w3-button w3-red">claimOwnership()</button>
            </div>
            <div class="w3-bar-item">
                <input id="claimOwnershipInput" onclick="clearErrors();" class="w3-input w3-border" placeholder="Message Value" type="text">
            </div>
        </div>
    </div>

<pre><code class="typescript Tomorrow">
pragma solidity ^0.5.2;

contract WarmUp {
    address public owner;
    mapping(address => uint) public contributions;

    constructor() public {
        owner = 0xcCF90925D0756bd69D1f3d0fD965672f34d32C4E;
    }

    function viewContribution() public view returns (uint) {
        return contributions[msg.sender];
    }

    function addToPot() public payable {
        require(msg.value > 0);
        contributions[msg.sender] += msg.value;
    }

    function claimOwnership() public payable {
        require(msg.value > 0 && contributions[msg.sender] > 0);
        owner = msg.sender;
    }
}
</code></pre>
</div>
<script>
hljs.initHighlightingOnLoad();
var abi = [{"constant":false,"inputs":[],"name":"addToPot","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"contributions","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"claimOwnership","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"viewContribution","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}];
var warmUpContract = web3.eth.contract(abi);
var warmUpInstance;

function deployContract() {

    var warmUp = warmUpContract.new(
        {
        from: web3.eth.accounts[0],
        data: '0x608060405234801561001057600080fd5b5073ccf90925d0756bd69d1f3d0fd965672f34d32c4e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610311806100746000396000f3fe608060405260043610610067576000357c01000000000000000000000000000000000000000000000000000000009004806317ebf6ae1461006c57806342e94c90146100765780634e71e0c8146100db5780638da5cb5b146100e5578063a93138341461013c575b600080fd5b610074610167565b005b34801561008257600080fd5b506100c56004803603602081101561009957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101c5565b6040518082815260200191505060405180910390f35b6100e36101dd565b005b3480156100f157600080fd5b506100fa610279565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014857600080fd5b5061015161029e565b6040518082815260200191505060405180910390f35b60003411151561017657600080fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b60016020528060005260406000206000915090505481565b60003411801561022c57506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b151561023757600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509056fea165627a7a72305820a1c9a5fe0802438061ca3f19ec0d03e724ec1357db0990ae7bb0833ad5560fd40029',
        gas: '4700000',
        gasPrice: 21000000000
    }, function (e, contract) {
        console.log(e, contract);
        document.getElementById('transactionInfo').innerHTML = "<i class=\"fas fa-spinner w3-spin\"></i> <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://"+networkURL+".etherscan.io/tx/"+contract.transactionHash+"'>" + contract.transactionHash + "</a>  Pending... (This can take a minute)";
        document.getElementById('deployedContractAddress').innerHTML = "<h3 class='w3-text-red'>Deploying... Please do not close this page.</h3>";
        if (typeof contract.address !== 'undefined') {
            console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
            //Add dApp Address to Local Storage
            localStorage.setItem("warmUpAddr", contract.address);
            getInstance();
            document.getElementById('transactionInfo').innerHTML = "";
            updateUI();
        }
    })
}

function updateUI(){
    //Display dApp UI
    document.getElementById("contractInterface").style.display = "block";
    document.getElementById('deployedContractAddress').innerHTML = "Address: <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://"+networkURL+".etherscan.io/address/"+warmUpInstance.address+"'>" + warmUpInstance.address + "</a>" +
    " <i id='copyBtn' title='Copy Address' class='far fa-copy w3-text-blue' onclick='copyAddress(warmUpInstance.address);'></i>" +
    " <i id='removeBtn' title='Remove Contract' class='far fa-trash-alt w3-text-red' onclick='removeContract(\"warmUpAddr\");'></i>";
    refreshInfo();
}
//If the contract has already been deployed, get instance from localstorage variable
function getInstance(){
    var warmUpAddr = localStorage.getItem("warmUpAddr");
    warmUpInstance = warmUpContract.at(warmUpAddr);
    console.log(warmUpInstance);
}

//send transaction to addToPot()
function addToPot(){
    var amountToAdd = removeSpace(document.getElementById("addToPotInput").value);
    if(isNaN(amountToAdd)){
        document.getElementById('userErrors').innerHTML = "Value must be a number";
        document.getElementById('addToPotInput').classList.add("w3-border-red");
    } else if(amountToAdd <= 0){
        document.getElementById('userErrors').innerHTML = "Value must be greater than 0";
        document.getElementById('addToPotInput').classList.add("w3-border-red");
    } else {
        amountToAdd = web3.toWei(amountToAdd, 'szabo');
        warmUpInstance.addToPot({value: amountToAdd, gas: 212720}, function(error, result){
        if (!error) {
            document.getElementById('transactionInfo').innerHTML += "<div id="+result+"><i class=\"fas fa-spinner w3-spin\"></i> <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://"+networkURL+".etherscan.io/tx/"+result+"'>" + result + "</a>  Pending... (This can take a minute)</div>";
            getTransaction(result);
        } else {
            document.getElementById('transactionInfo').innerHTML += '<pre>' + error + '</pre>'
        }});
    }
}

function claimOwnership(){
    var claimOwnershipAmount = removeSpace(document.getElementById("claimOwnershipInput").value);
    if(isNaN(claimOwnershipAmount)){
        document.getElementById('userErrors').innerHTML = "Value must be a number";
        document.getElementById('claimOwnershipInput').classList.add("w3-border-red");
    } else if(claimOwnershipAmount <= 0){
        document.getElementById('userErrors').innerHTML = "Value must be greater than 0";
        document.getElementById('claimOwnershipInput').classList.add("w3-border-red");
    } else {
        claimOwnershipAmount = web3.toWei(claimOwnershipAmount, 'szabo');
        warmUpInstance.claimOwnership({value: claimOwnershipAmount, gas: 212720}, function(error, result){
            if (!error) {
                document.getElementById('transactionInfo').innerHTML += "<div id="+result+"><i class=\"fas fa-spinner w3-spin\"></i> <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://"+networkURL+".etherscan.io/tx/"+result+"'>" + result + "</a> Pending... (This can take a minute)</div>";
                getTransaction(result);
            } else {
                document.getElementById('transactionInfo').innerHTML += '<pre>' + error + '</pre>'
            }});
    }
}

function viewContributions(){
    var viewContributions = document.getElementById('viewContributions');
    viewContributions.innerHTML = '<i class="fas fa-spinner w3-spin"></i>';
    warmUpInstance.viewContribution.call(function(error, result){
        viewContributions.innerHTML = result + ' wei';
    });
}

function viewOwner(){
    var viewOwner = document.getElementById('viewOwner');
    viewOwner.innerHTML = '<i class="fas fa-spinner w3-spin"></i>';
    warmUpInstance.owner.call(function(error, result){
        viewOwner.innerHTML = result;
        if(result == web3.eth.accounts[0]){
            localStorage.setItem("warmUpComplete", "true");
            completedStatus();
            document.getElementById('levelCompleteModal').style.display='block';
            clearInterval(updateInfo);
        }
    });
}

function clearErrors(){
    document.getElementById('userErrors').innerHTML = "";
    document.getElementById('addToPotInput').classList.remove("w3-border-red");
    document.getElementById('claimOwnershipInput').classList.remove("w3-border-red");
}

var Level = 1;
function getHint(){
    var hintText = document.getElementById('HintText');
    var hintBtn = document.getElementById('hintButton');
    hintText.style.display = "block";

    if(Level == "1"){
        hintText.innerHTML = "<p>Look at the different functions to understand what the contract does.</p><p>msg.value is the amount of Ether you send in a transaction. msg.sender is the sender of the transaction.</p>";
        Level = 2;
        hintBtn.innerHTML = "Hint (1/2)";
    } else if (Level == "2"){
        hintText.innerHTML += "<p>Your contributions must be greater than 0 to claim ownership.</p><p></p>";
        Level = 3;
        hintBtn.innerHTML = "Tell me how to do it";
    } else if (Level == "3"){
        hintText.innerHTML += "<p>Call the addToPot function with a message value greater than 0. Then call the claimOwnership variable with a message value greater than 0.</p>";
        hintBtn.innerHTML = "Hints (2/2)";
        hintBtn.style.display = "none";
    }
}

var updateInfo;
function refreshInfo(){
    //Call every x seconds.
    updateInfo = setInterval(function() {
        viewOwner();
        viewContributions();
    }, 3000);
}

//Check LocalStorage to see if the contract has been deployed.
window.onload = function(){
    if (localStorage.getItem("warmUpAddr")){
        getInstance();
        viewOwner();
        viewContributions();
        updateUI();
    }
}

</script>