<div id="levelCompleteModal" class="w3-modal">
    <div class="w3-modal-content w3-card-4 w3-animate-zoom">
        <header class="w3-container w3-indigo">
        <span onclick="document.getElementById('levelCompleteModal').style.display='none'"
              class="w3-button w3-display-topright">&times;</span>
            <h2>Congratulations!</h2>
        </header>
        <div class="w3-container header">
            <p>You completed ForcedPayments!</p>
            <p>You are now ready to move onto the next level</p>
        </div>
        <footer class="w3-container w3-padding w3-indigo">
            <a href="/survey" class="w3-button w3-left w3-amber">I've Had Enough</a><a href="/games/simpleDAO" class="w3-button w3-right w3-green">Next Level</a>
        </footer>
    </div>
</div>

<div class="w3-container w3-margin w3-card-4 header">
    <div class="w3-cell-row">
        <div class="w3-cell w3-cell-bottom">
            <h2>Forced Payments</h2>
        </div>
        <div class="w3-cell w3-cell-middle" style="text-align: right">
            Difficulty: <span class="w3-tag w3-yellow">4/10</span>
        </div>
    </div>

    <hr>

    <div class="w3-cell-row">
        <div class="w3-cell w3-cell-bottom">
            <h3>Beat This Level</h3>
        </div>
        <div class="w3-cell w3-cell-middle" style="text-align: right">
            <button id="levelFeedbackBtn" onclick="submitLvlFeedback();" class="w3-button w3-indigo w3-right">Submit level feedback</button>
        </div>
    </div>
    <div id="levelFeedback" style="display:none;">
        <form action="/games/forcedPayments" method="post">
            <textarea style="width:100%;" rows="4" name="levelFeedback"></textarea>
            <button type="submit" class="w3-button w3-green">Submit</button>
        </form>
    </div>
    <p>To beat this level, make the contract have a balance greater than 0</p>
    <p>You will need to create and deploy your own smart contract to beat this level. Use <a target="_blank" rel="noopener noreferrer" href="https://remix.ethereum.org">Remix</a> to do this.</p>

    <button id="hintButton" class="w3-button w3-amber w3-margin" onclick="getHint();">Get Hint (2)</button>
    <div id="HintText" style="display: none;"></div>
</div>

<div class="w3-panel w3-card-4 header w3-margin">
    <h4>ForcedPayments.sol</h4>
    <div id="deployedContractAddress" class="w3-margin"><button id="deployButton" onclick="deployContract();" class="w3-button w3-orange w3-margin">Deploy</button></div>
    <div id="transactionInfo" class="w3-margin secondary"></div>
    <div id="userErrors" class="w3-text-red w3-margin"></div>
    <div id="contractInterface" style="display: none;">
        <div class="w3-bar">
            <div class="w3-bar-item">
                <button onclick="checkBalance();" class="w3-button w3-blue">View Contract Balance</button>
            </div>
            <div class="w3-bar-item">
                <div id="checkBalance"></div>
            </div>
        </div>
    </div>

    <pre><code class="typescript Tomorrow">
pragma solidity ^0.5.3;

contract forcedPayments {/*

    ¯\_(ツ)_/¯

*/}
</code></pre>
</div>
<script>
hljs.initHighlightingOnLoad();
var forcedPaymentsContract = web3.eth.contract([]);
var forcedPaymentsInstance;

function deployContract() {
    var forcedPayments = forcedPaymentsContract.new(
    {
        from: web3.eth.accounts[0],
        data: '0x6080604052348015600f57600080fd5b50603580601d6000396000f3fe6080604052600080fdfea165627a7a723058205965b236e1465e1f72c5feebdb9cd5e1fadc986360c30c74f7aed47415c337f60029',
        gas: '4700000',
        gasPrice: 21000000000
    }, function (e, contract) {
        console.log(e, contract);
        document.getElementById('transactionInfo').innerHTML = "<i class=\"fas fa-spinner w3-spin\"></i> <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://"+networkURL+".etherscan.io/tx/"+contract.transactionHash+"'>" + contract.transactionHash + "</a>  Pending... (This can take a minute)";
        document.getElementById('deployedContractAddress').innerHTML = "<h3 class='w3-text-red'>Deploying... Please do not close this page.</h3>";
        if (typeof contract.address !== 'undefined') {
            console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
            //Add dApp Address to Local Storage
            localStorage.setItem("forcedPaymentsAddr", web3.toChecksumAddress(contract.address));
            getInstance();
            document.getElementById('transactionInfo').innerHTML = "";
            updateUI();
        }
    })
}

function updateUI(){
    refreshInfo();
    document.getElementById("contractInterface").style.display="block";
    document.getElementById('deployedContractAddress').innerHTML = "Address: <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://"+ localStorage.getItem('networkURL') +".etherscan.io/address/"+forcedPaymentsInstance.address+"'>" + forcedPaymentsInstance.address + "</a>" +
            " <i id='copyBtn' title='Copy Address' class='far fa-copy w3-text-blue' onclick='copyAddress(forcedPaymentsInstance.address);'></i>" +
    " <i id='removeBtn' title='Remove Contract' class=\"far fa-trash-alt w3-text-red\" onclick='removeContract(\"forcedPaymentsAddr\");'></i>";
}
//If the contract has already been deployed, get instance from localstorage variable
function getInstance(){
    var forcedPaymentsAddr = localStorage.getItem("forcedPaymentsAddr");
    forcedPaymentsInstance = forcedPaymentsContract.at(forcedPaymentsAddr);
    console.log(forcedPaymentsInstance);
}

function checkBalance(){
    var checkBalance = document.getElementById('checkBalance');
    checkBalance.innerHTML = '<i class="fas fa-spinner w3-spin"></i>';
    web3.fromWei(web3.eth.getBalance(forcedPaymentsInstance.address, function(error, result){
        checkBalance.innerHTML = result + ' wei';
        if(result > 0){
            localStorage.setItem("forcedPaymentsComplete", "true");
            completedStatus();
            document.getElementById('levelCompleteModal').style.display='block';
            clearInterval(updateInfo);
        }
    }));
}

var Level = 1;
function getHint(){

    var hintText = document.getElementById('HintText');
    var hintBtn = document.getElementById('hintButton');
    hintText.style.display = "block";

    if(Level == "1"){
        hintText.innerHTML = "<p>For a contract to receive Ether a function must be marked as 'payable'. However there is one other way...</p>";
        hintBtn.innerHTML = "Hint (1/2)";
        Level = 2;
        localStorage.setItem("forcedPaymentsHints", "1");
    } else if (Level == "2"){
        hintText.innerHTML += "<p>Look into the self destruct function.</p>";
        hintBtn.innerHTML = "Tell me how to do it";
        Level = 3;
        localStorage.setItem("forcedPaymentsHints", "2");
    } else if (Level == "3"){
        hintText.innerHTML += "<pre><code class=\"Javascript Tomorrow\">" +
                "contract forcedPaymentsAnswer {\n" +
                "\n" +
                "    constructor() public payable {require(msg.value > 0);}\n" +
                "    \n" +
                "    function kill() public{\n" +
                "        selfdestruct(**Deployed Contract Address**);\n" +
                "    }\n" +
                "}" +
                "</code></pre>" +
                "<p>Make sure to send a message value greater than 0 when deploying the contract.</p>";
        hintBtn.innerHTML = "Hint (2/2)";
        hintBtn.style.display = "none";
        document.querySelectorAll('pre code').forEach((block) => {
            hljs.highlightBlock(block);
        });
        localStorage.setItem("forcedPaymentsHints", "3");
    }
}

var updateInfo;
function refreshInfo(){
    //Call every x seconds.
    updateInfo = setInterval(function() {
        checkBalance();
    }, 3000);
}

//Check LocalStorage to see if the contract has been deployed.
if (localStorage.getItem("forcedPaymentsAddr")){
    //Add Contract to web3.eth.contract
    getInstance();
    updateUI();
    checkBalance();
}
</script>