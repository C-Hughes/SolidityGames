<div class="w3-container w3-margin w3-card-4 header">
    <br>
    <h2>Beat This Level</h2>
    <p>Make the contracts address have a balance greater than 0</p>
    <button id="hintButton" class="w3-button w3-amber" onclick="getHint();">Hint (3)</button>
    <div id="HintText" style="display: none;"></div>
</div>

<div class="w3-panel w3-card-4 header w3-margin">
    <h4>WarmUp.sol</h4>
    <div id="deployedContractAddress" class="w3-margin"><button id="deployButton" onclick="deployContract();" class="w3-button w3-orange w3-margin">Deploy</button></div>
    <div id="transactionInfo" class="w3-margin"></div>
    <div id="userErrors" class="w3-text-red w3-margin"></div>
    <div id="contractInterface"></div>

    <pre><code class="typescript Tomorrow">
pragma solidity ^0.5.3;

contract forcedPayments {/*

    ¯\_(ツ)_/¯

*/}
</code></pre>
</div>
<script>
hljs.initHighlightingOnLoad();
var abi = [];
var forcedPaymentspContract = web3.eth.contract(abi);
var forcedPaymentsInstance;

function deployContract() {
    var forcedPayments = forcedPaymentsContract.new(
            {
                from: web3.eth.accounts[0],
                data: '0x608060405234801561001057600080fd5b5073ccf90925d0756bd69d1f3d0fd965672f34d32c4e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610311806100746000396000f3fe608060405260043610610067576000357c01000000000000000000000000000000000000000000000000000000009004806317ebf6ae1461006c57806342e94c90146100765780634e71e0c8146100db5780638da5cb5b146100e5578063a93138341461013c575b600080fd5b610074610167565b005b34801561008257600080fd5b506100c56004803603602081101561009957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101c5565b6040518082815260200191505060405180910390f35b6100e36101dd565b005b3480156100f157600080fd5b506100fa610279565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014857600080fd5b5061015161029e565b6040518082815260200191505060405180910390f35b60003411151561017657600080fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b60016020528060005260406000206000915090505481565b60003411801561022c57506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b151561023757600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509056fea165627a7a72305820a1c9a5fe0802438061ca3f19ec0d03e724ec1357db0990ae7bb0833ad5560fd40029',
                gas: '4700000'
            }, function (e, contract) {
                console.log(e, contract);
                transactionPending(contract);
                if (typeof contract.address !== 'undefined') {
                    console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
                    //Add dApp Address to Local Storage
                    localStorage.setItem("warmUpAddr", contract.address);
                    getInstance();
                    document.getElementById('transactionInfo').innerHTML = "";
                    updateUI();
                }
            })
}

function transactionPending(contract){
    var Tx = contract.transactionHash;
    document.getElementById('transactionInfo').innerHTML = "<i class=\"fas fa-spinner w3-spin\"></i> Transaction <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/tx/"+Tx+"'>" + Tx + "</a>  Pending... (This can take a minute)";
}

function updateUI(){

    var x = document.getElementById("contractInterface");
    x.innerHTML = '<div class="w3-bar"><div class="w3-bar-item"><button class="w3-button w3-blue" onclick="submitLevel();">Submit Level</button></div>';

    document.getElementById('deployedContractAddress').innerHTML = "Address: <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://ropsten.etherscan.io/address/"+warmUpInstance.address+"'>" + warmUpInstance.address + "</a>";
}
//If the contract has already been deployed, get instance from localstorage variable
function getInstance(){
    var forcedPaymentsAddr = localStorage.getItem("forcedPaymentsAddr");
    forcedPaymentsInstance = forcedPaymentsContract.at(forcedPaymentsAddr);
    console.log(forcedPaymentsInstance);
}

var Level = 1;
function getHint(){

    var hintText = document.getElementById('HintText');
    hintText.style.display = "block";
    hintText.innerHTML = "";

    if(Level == "1"){
        hintText.innerHTML = "<p>Before Solidity v0.4.23, a function with the same name as the contract is the constructor function. This code is executed exactly once, when the contract is initially deployed. </p>";
        document.getElementById('hintButton').innerHTML = "Hint (1/2)";
        Level = 2;
    } else if (Level == "2"){
        hintText.innerHTML = "<p>Before Solidity v0.4.23, a function with the same name as the contract is the constructor function. This code is executed exactly once, when the contract is initially deployed. </p><p>In Solidity, function and variable names are case sensitive.</p>";
        document.getElementById('hintButton').innerHTML = "Hint (2/2)";
    }
}

//Check LocalStorage to see if the contract has been deployed.
if (localStorage.getItem("forcedPaymentsAddr")){
    //Add Contract to web3.eth.contract
    getInstance();
    updateUI();
}
</script>